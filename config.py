import os
import math
from yacs.config import CfgNode as CN

_C = CN()
cfg = _C
_C.MODEL_NAME = 'efficientnetb3'
_C.CKPT_DIR = './checkpoint/' + _C.MODEL_NAME
_C.LOG_DIR = _C.CKPT_DIR + '/logs'

_C.TRAIN = CN()
_C.TRAIN.BATCH_SIZE = 16
_C.TRAIN.EPOCHS = 1000
_C.TRAIN.ACTIVATION = 'softmax'
_C.TRAIN.WEIGHTS = 'imagenet'
_C.TRAIN.FREEZE_ENCODER = False
_C.TRAIN.OPTIMIZER = 'sgd'
_C.TRAIN.RHO = 0.9
_C.TRAIN.MOMENTUM = 0.9
_C.TRAIN.SNAP_SHOT = 3

_C.DATASET = CN()
_C.DATASET.TRAIN_DATA = './dataset/record/train*'
_C.DATASET.VAL_DATA = './dataset/record/val*'
_C.DATASET.RAW_SIZE = (600, 800)     # H, W
_C.DATASET.SIZE = (300, 400)
_C.DATASET.CHANNELS = 3
_C.DATASET.N_CLASSES = 5
_C.DATASET.LABELS = ['0', '1', '2', '3', '4']
_C.DATASET.NUM_TRAIN = 4000

_C.SCHEDULER = CN()
_C.SCHEDULER.LR_TYPE = 'exponential'    # piecewise, cosine_decay_restart
_C.SCHEDULER.LR_INIT = 1e-1
_C.SCHEDULER.LR_DECAY_RATE = 0.96
_C.SCHEDULER.LR_LOWER_BOUND = 1e-5
_C.SCHEDULER.LR_DECAY_STEPS = math.ceil(_C.DATASET.NUM_TRAIN / _C.TRAIN.BATCH_SIZE) * 3
_C.SCHEDULER.WARMUP_STEPS = math.ceil(_C.DATASET.NUM_TRAIN / _C.TRAIN.BATCH_SIZE) * 10
_C.SCHEDULER.CDR_T_MUL = 1.5
_C.SCHEDULER.CDR_M_MUL = 0.5
_C.SCHEDULER.NUM_PERIODS = 0.5
_C.SCHEDULER.LCD_ALPHA = 0.0
_C.SCHEDULER.LCD_BETA = 0.0001
_C.SCHEDULER.INITIAL_VARIANCE = 1.0
_C.SCHEDULER.VARIANCE_DECAY = 0.55
_C.SCHEDULER.BOUNDARIES = [5000, 8000, 10000, 12000, 14000, 16000, 18000, 19000, 20000]
_C.SCHEDULER.BOUNDARIES = [1e-4, 9e-5, 8e-5, 7e-5, 6e-5, 5e-5, 4e-5, 3e-5, 2e-5, 1e-5]

_C.LOSS = CN()
_C.LOSS.TYPE = 'ce_loss'
_C.LOSS.WEIGHT_DECAY = 5e-5
_C.LOSS.TOPK = _C.DATASET.SIZE[0] * _C.DATASET.SIZE[0] * 0.25
_C.LOSS.IGNORE = True
_C.LOSS.ALPHA = 0.25
_C.LOSS.GAMMA = 2
_C.LOSS.LABEL_SMOOTHING = 0.05
_C.LOSS.WEIGHTS = [1, 1, 1, 1, 1, 1, 1, 1]

_C.AUGMENTATION = CN()

